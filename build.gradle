plugins {
    id 'org.ajoberstar.grgit' version '5.0.0'
    id 'java'
}

group 'me.yamayaki'
version getVersionMetadata()

repositories {
    mavenCentral()
    mavenLocal()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.19.0'
    implementation 'com.google.code.gson:gson:2.10'
    implementation 'org.javacord:javacord:3.7.2-SNAPSHOT'
    implementation 'com.github.walkyst:lavaplayer-fork:1.3.99.2'
    implementation 'se.michaelthelin.spotify:spotify-web-api-java:7.2.2'
    implementation 'org.rocksdb:rocksdbjni:7.8.3'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes(
                'Multi-Release': 'true',
                'Main-Class': 'me.yamayaki.musicbot.MusicBot'
        )
    }
}

processResources {
    filesMatching('recorderbot.properties') {
        expand 'bot_version': project.version,
                'git_clean': grgit.status().clean,
                'git_branch': grgit.branch.current().name,
                'compile_time': new Date().toInstant().toEpochMilli()
    }
}

java {
    withSourcesJar()
}

task copyDependencies(type: Copy) {
    from configurations.default
    into 'build/libs/dependencies'
}

def getVersionMetadata() {
    def build_id = System.getenv("GITHUB_RUN_NUMBER")

    // CI builds only
    if (build_id != null) {
        return 'build.' + build_id
    }

    if (grgit != null) {
        def head = grgit.head()
        def id = head.abbreviatedId

        // Flag the build if the build tree is not clean
        if (!grgit.status().clean) {
            id += '-dev'
        }

        return 'rev.' + id
    }

    // No tracking information could be found about the build
    return 'unknown'
}
